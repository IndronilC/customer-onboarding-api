/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.kanini.corebanking.custonboard.api;

import com.kanini.corebanking.custonboard.api.model.Customer;
import com.kanini.corebanking.custonboard.api.model.CustomerRequest;
import com.kanini.corebanking.custonboard.api.model.ErrorResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-08-02T15:22:51.363361100+05:30[Asia/Calcutta]")

@Api(value = "Customers", description = "the Customers API")
public interface CustomersApi {

    /**
     * POST /customers/register : Registers a new Customer
     * Initiates a customer onboarding operation where it registers a new customer post accepting and inspecting all the details.
     *
     * @param customerRequest All the fields required to register the new customer. (required)
     * @return Customer creation Success (status code 201)
     *         or Validation Error Has Occurred (status code 401)
     */
    @ApiOperation(value = "Registers a new Customer", nickname = "registerCustomer", notes = "Initiates a customer onboarding operation where it registers a new customer post accepting and inspecting all the details.", response = Customer.class, tags={ "customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Customer creation Success", response = Customer.class),
        @ApiResponse(code = 401, message = "Validation Error Has Occurred", response = ErrorResponse.class) })
    @RequestMapping(value = "/customers/register",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Customer> registerCustomer(@ApiParam(value = "All the fields required to register the new customer." ,required=true )   @RequestBody CustomerRequest customerRequest);

}
